@use "sass:map";

$colors: (
  "gray": #6c757d,
  "red": #dc3545,
  "yellow": #ffc107,
  "green": #28a745,
  "blue": #007bff,
  "teal": #17a2b8
);

$dark-offset: 30%;
$variation-offsets: (
  "light": (
    "100": -95%,
    "200": -90%,
    "300": -70%,
    "400": -50%,
    "500": 0%,
    "600": 5%,
    "700": 10%,
    "800": 20%,
    "900": 30%
  ),
  "dark": (
    "100": 52%,
    "200": 40%,
    "300": 20%,
    "400": 10%,
    "500": 0%,
    "600": -5%,
    "700": -10%,
    "800": -20%,
    "900": -30%
  )
);

@function get-color($theme, $color) {
  @if $theme == "dark" {
    @return shift-color(map-get($colors, $color), $dark-offset);
  } @else {
    @return map-get($colors, $color);
  }
}

@function get-color-shade($theme, $color, $shade) {
  @return shift-color(get-color($theme, $color), $shade);
}

@function get-color-variation($theme, $color, $variation) {
  @return shift-color(get-color($theme, $color), map-get(map-get($variation-offsets, $theme), $variation));
}

:root,
[data-color-scheme=light] {

  $light-variation-offsets: map-get($variation-offsets, "light");
  @each $color, $value in $colors {
    --color-#{$color}: #{$value};

    @each $offset, $shift in $light-variation-offsets {
      --color-#{$color}-#{$offset}: #{shift-color($value, $shift)};
    }
  }
}

:root,
[data-color-scheme=dark] {

  $dark-variation-offsets: map-get($variation-offsets, "dark");
  @each $color, $value in $colors {
    --color-#{$color}: #{$value};

    @each $offset, $shift in $dark-variation-offsets {
      $dark-color: shift-color($value, $dark-offset);
      --color-#{$color}-#{$offset}: #{shift-color($dark-color, $shift)};
    }
  }
}
